// Generated by CoffeeScript 1.7.1
(function() {
  var Button, Calculator, DigitButton, EqualsButton, OperatorButton,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  String.prototype.toNumber = function() {
    return Number.parseFloat(this);
  };

  Calculator = (function() {
    Calculator.digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, '.'];

    Calculator.operators = ['+', '-', '*', '/'];

    function Calculator(element) {
      this.element = element;
      this.leftOperandDisplay = this.element.querySelector('.display#left-operand');
      this.rightOperandDisplay = this.element.querySelector('.display#right-operand');
      this.resultDisplay = this.element.querySelector('.display#result');
      this.currentOperandDisplay = this.leftOperandDisplay;
      this.build_buttons();
    }

    Calculator.prototype.build_buttons = function() {
      this.constructor.digits.forEach((function(_this) {
        return function(number) {
          return _this.addButton(new DigitButton(number));
        };
      })(this));
      this.constructor.operators.forEach((function(_this) {
        return function(operator) {
          return _this.addButton(new OperatorButton(operator));
        };
      })(this));
      return this.addButton(new EqualsButton);
    };

    Calculator.prototype.addButton = function(button) {
      return this.element.querySelector('buttons').appendChild(button.element);
    };

    Calculator.prototype.addDigitToCurrentOperand = function(digit) {
      return this.currentOperandDisplay.value = "" + this.currentOperandDisplay.value + digit;
    };

    Calculator.prototype.setOperator = function(operator) {
      this.currentOperator = operator;
      return this.currentOperandDisplay = this.rightOperandDisplay;
    };

    Calculator.prototype.performOperation = function() {
      var value;
      switch (this.currentOperator) {
        case '+':
          value = this.leftOperandDisplay.value.toNumber() + this.rightOperandDisplay.value.toNumber();
          break;
        case '-':
          value = this.leftOperandDisplay.value.toNumber() - this.rightOperandDisplay.value.toNumber();
          break;
        case '*':
          value = this.leftOperandDisplay.value.toNumber() * this.rightOperandDisplay.value.toNumber();
          break;
        case '/':
          value = this.leftOperandDisplay.value.toNumber() / this.rightOperandDisplay.value.toNumber();
      }
      this.currentOperandDisplay = this.leftOperandDisplay;
      return this.resultDisplay.value = value;
    };

    return Calculator;

  })();

  Button = (function() {
    function Button(text) {
      this.element = document.createElement('button');
      this.element.textContent = text;
      this.element.addEventListener('click', (function(_this) {
        return function() {
          return _this.action();
        };
      })(this));
    }

    return Button;

  })();

  DigitButton = (function(_super) {
    __extends(DigitButton, _super);

    function DigitButton(digit) {
      this.digit = digit;
      DigitButton.__super__.constructor.call(this, digit);
    }

    DigitButton.prototype.action = function() {
      return window.calculator.addDigitToCurrentOperand(this.digit);
    };

    return DigitButton;

  })(Button);

  OperatorButton = (function(_super) {
    __extends(OperatorButton, _super);

    function OperatorButton(operator) {
      this.operator = operator;
      OperatorButton.__super__.constructor.call(this, operator);
    }

    OperatorButton.prototype.action = function() {
      return window.calculator.setOperator(this.operator);
    };

    return OperatorButton;

  })(Button);

  EqualsButton = (function(_super) {
    __extends(EqualsButton, _super);

    function EqualsButton() {
      EqualsButton.__super__.constructor.call(this, '=');
    }

    EqualsButton.prototype.action = function() {
      return window.calculator.performOperation();
    };

    return EqualsButton;

  })(Button);

  window.calculator = new Calculator(document.querySelector('calculator'));

}).call(this);
